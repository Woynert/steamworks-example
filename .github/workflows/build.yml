name: build
on:
  workflow_call:

jobs:
  build-linux:
    runs-on: 'ubuntu-20.04'
    defaults:
      run:
        working-directory: './build-conan'

    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: .conan cache
        uses: actions/cache@v4
        with:
          path: '~/.conan2'
          key: host-${{ runner.os }}-${{ hashFiles('build-conan/conanfile.py') }}

      - name: setup tools
        run: |
          sudo apt-get -yq install ninja-build
          pipx install meson && pipx install conan
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"

      - name: setup conan
        run: |
          conan profile detect -f
          make conanexport
          conan install . --output-folder=deps --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True

      - name: build
        run: |
          make mesonsetup
          make install

      - name: package it
        run: make linux-package

      - name: upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-package
          path: 'build-conan/linux.tar.gz'
          retention-days: 1

  build-windows:
    runs-on: 'windows-2022'
    defaults:
      run:
        working-directory: './build-conan'
        shell: bash

    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: .conan cache
        uses: actions/cache@v4
        with:
          path: '~/.conan2'
          key: host-${{ runner.os }}-${{ hashFiles('build-conan/conanfile.py') }}

      - name: install scoop
        shell: pwsh
        run: iex "& {$(irm get.scoop.sh)} -RunAsAdmin"

      - name: setup scoop tools
        run: |
          "$HOME/scoop/shims/scoop" install pkg-config make
          echo 'C:\\Users\runneradmin\scoop\shims' >> "$GITHUB_PATH"
          # export win path for cmd.exe shell (msvc)

      - name: setup pipx tools
        run: for p in meson ninja conan; do pipx install $p; done

      - name: setup conan
        run: |
          echo $PATH
          conan profile detect -f
          make conaninstall

      - name: build
        run: |
          echo $PATH
          make mesonsetupvs
          make install

      - name: package it
        run: make windows-package

      - name: upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: 'build-conan/windows.zip'
          retention-days: 1
